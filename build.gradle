plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.kotlin.kapt" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-runtime:$micronautVersion"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty:$micronautVersion"
    implementation "io.micronaut:micronaut-http-client:$micronautVersion"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:7.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "net.logstash.logback:logstash-logback-encoder:6.2"
    testImplementation "org.assertj:assertj-core:3.11.1"
    implementation "io.micronaut.configuration:micronaut-micrometer-core:$micronautMicrometerVersion"
    implementation "io.micronaut.configuration:micronaut-micrometer-registry-prometheus:$micronautMicrometerVersion"
    implementation "io.micronaut:micronaut-management:$micronautVersion"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
}

group = "no.nav.arbeid.internal-search-api"
version = "0.1"
sourceCompatibility = "12"

application { mainClassName = "no.nav.arbeid.search.api.Application" }

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        javaParameters = true
    }
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
